// Define Area of Interest (AOI)
var aoi = ee.Geometry.Polygon([
  [[73.2524, 18.9965], [73.2524, 18.3408], 
   [74.0969, 18.3408], [74.0969, 18.9965]]
]);

Map.centerObject(aoi, 8);

// Function to mask clouds using the QA_PIXEL band
function maskClouds(image) {
  var qa = image.select('QA_PIXEL');
  var mask = qa.bitwiseAnd(1 << 3).eq(0); // Keep only clear pixels
  return image.updateMask(mask);
}

// Function to compute NDVI
function computeNDVI(image) {
  var ndvi = image.expression(
    '(NIR - RED) / (NIR + RED)', {
      'NIR': image.select('SR_B5').multiply(0.0000275).add(-0.2), // Scale factor
      'RED': image.select('SR_B4').multiply(0.0000275).add(-0.2)
  }).rename('NDVI');

  return ndvi.copyProperties(image, ['system:time_start']);
}

// Load Landsat 8 & 9 Collection, filter by date, and process
var landsatNdvi = ee.ImageCollection("LANDSAT/LC08/C02/T1_L2")
  .filterBounds(aoi)
  .filterDate('2017-01-01', '2023-12-31')
  .map(maskClouds)
  .map(computeNDVI);

// Function to compute mean NDVI for AOI
var meanNdviTimeSeries = landsatNdvi.map(function(image) {
  var meanNdvi = image.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: aoi,
    scale: 30, // Landsat 30m resolution
    maxPixels: 1e13
  }).get('NDVI');
  
  return ee.Feature(null, {
    'date': ee.Date(image.get('system:time_start')).format('YYYY-MM-dd'),
    'meanNDVI': meanNdvi
  });
});

// Convert to FeatureCollection for charting
var ndviChartData = ee.FeatureCollection(meanNdviTimeSeries);

// Create a time series chart
var chart = ui.Chart.feature.byFeature(ndviChartData, 'date', 'meanNDVI')
  .setChartType('LineChart')
  .setOptions({
    title: 'Mean NDVI Time Series (AOI) - Landsat 8/9',
    hAxis: { title: 'Date', format: 'YYYY-MM', gridlines: { count: 12 } },
    vAxis: { title: 'Mean NDVI', minValue: 0, maxValue: 1 },
    lineWidth: 2,
    pointSize: 3,
    colors: ['#1a9850']
  });

// Display chart
print(chart);
