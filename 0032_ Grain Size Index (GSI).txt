
// Soil Vegitation Snatinal 2 Spectral

// Cloud Mask Function
var maskClouds = function(image) {
  var cloudProbability = image.select('MSK_CLDPRB'); // Select the cloud probability band
  return image.updateMask(cloudProbability.lt(10)); // Return image masking out cloudy areas (cloud probability < 50%)
};

var scale = (function(image) {
                    return image
                      .multiply(0.0001) // Scaling factor for Sentinel-2 SR
                      .copyProperties(image, ['system:time_start']);
                  });
//----------------------------------------------------------------------------------------------------

var aoi = ee.FeatureCollection('projects/gee-trial2/assets/Shapfile/WMH_Distric');
Map.centerObject(aoi, 5); 

//-----------------------------------------------------------------------------
var startyear = 2019; 
var endyear = 2019;
var startmonth = 1; 
var endmonth = 12; 

// Compute beginning & end of study period + sequence of months & years
var start_date = ee.Date.fromYMD(startyear, startmonth, 1);
var end_date = ee.Date.fromYMD(endyear , endmonth, 30);
var years = ee.List.sequence(startyear, endyear);
var months = ee.List.sequence(startmonth,endmonth);

// Load the Santianal Dataset
var santianal = ee.ImageCollection("COPERNICUS/S2_SR_HARMONIZED")
                                    .filterBounds(aoi)
                                    .map(maskClouds)
                                    .map(scale)
                                    .filterDate(start_date, end_date);

//---------------------------------------------------------------------------------------//
// Grain Size Index (RI) 
var gsi = function(image) {
  var red = image.select('B4');  // Red band (660-680 nm)
  var blue = image.select('B2');  // Blue band (490-520 nm)
  var green = image.select('B3');  // Green band (560-660 nm)
  var bbG = blue.add(blue).add(green);
  return (red.subtract(blue)).divide(bbG);
};

var gsiCollection = santianal.map(gsi);

//---------------------------------------------------------------------------------------
var Vis = {
  min: -1,
  max: 1,
  palette: ['0000ff','00ffff','ffff00','ff0000','ffffff'],
};


Map.addLayer(gsiCollection.map(function(image) {
  return image.clip(aoi);
}), Vis, 'palette');

//-------------------------------------------------------------------
// Export the image collection to Drive
Export.image.toDrive({
  image: gsiCollection.mean().toInt16(),
  description: 'GSI',
  scale: 30,
  region: aoi,
  maxPixels: 8e9,
  fileFormat: 'GeoTIFF'
});


